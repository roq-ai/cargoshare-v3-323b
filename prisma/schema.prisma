generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model booking {
  id                 String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  guest_id           String?       @db.Uuid
  truck_id           String?       @db.Uuid
  route_id           String?       @db.Uuid
  cargo_space_booked Int
  booking_cost       Int
  created_at         DateTime      @default(now()) @db.Timestamp(6)
  updated_at         DateTime      @default(now()) @db.Timestamp(6)
  user               user?         @relation(fields: [guest_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  route              route?        @relation(fields: [route_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  truck              truck?        @relation(fields: [truck_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transaction        transaction[]
}

model platform {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?       @db.VarChar(255)
  name        String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  user_id     String        @db.Uuid
  tenant_id   String        @db.VarChar(255)
  user        user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transaction transaction[]
  truck       truck[]
}

model route {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  origin      String    @db.VarChar(255)
  destination String    @db.VarChar(255)
  truck_id    String?   @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  booking     booking[]
  truck       truck?    @relation(fields: [truck_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model transaction {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  booking_id         String?   @db.Uuid
  platform_id        String?   @db.Uuid
  transaction_amount Int
  created_at         DateTime  @default(now()) @db.Timestamp(6)
  updated_at         DateTime  @default(now()) @db.Timestamp(6)
  booking            booking?  @relation(fields: [booking_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  platform           platform? @relation(fields: [platform_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model truck {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String    @db.VarChar(255)
  cargo_space Int
  platform_id String?   @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  booking     booking[]
  route       route[]
  platform    platform? @relation(fields: [platform_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  booking     booking[]
  platform    platform[]
}
